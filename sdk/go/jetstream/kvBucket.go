// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package jetstream

import (
	"context"
	"reflect"

	"github.com/Triple-Whale/pulumi-jetstream/sdk/go/jetstream/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type KvBucket struct {
	pulumi.CustomResourceState

	// Contains additional information about this bucket
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// How many historical values to keep
	History pulumi.IntPtrOutput `pulumi:"history"`
	// Maximum size of the entire bucket
	MaxBucketSize pulumi.IntPtrOutput `pulumi:"maxBucketSize"`
	// Maximum size of any value
	MaxValueSize pulumi.IntPtrOutput `pulumi:"maxValueSize"`
	// The name of the Bucket
	Name pulumi.StringOutput `pulumi:"name"`
	// Place the bucket in a specific cluster, influenced by placement_tags
	PlacementCluster pulumi.StringPtrOutput `pulumi:"placementCluster"`
	// Place the stream only on servers with these tags
	PlacementTags pulumi.StringArrayOutput `pulumi:"placementTags"`
	// Number of cluster replicas to store
	Replicas pulumi.IntPtrOutput `pulumi:"replicas"`
	// How many seconds a value will be kept in the bucket
	Ttl pulumi.IntPtrOutput `pulumi:"ttl"`
}

// NewKvBucket registers a new resource with the given unique name, arguments, and options.
func NewKvBucket(ctx *pulumi.Context,
	name string, args *KvBucketArgs, opts ...pulumi.ResourceOption) (*KvBucket, error) {
	if args == nil {
		args = &KvBucketArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource KvBucket
	err := ctx.RegisterResource("jetstream:index/kvBucket:KvBucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKvBucket gets an existing KvBucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKvBucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KvBucketState, opts ...pulumi.ResourceOption) (*KvBucket, error) {
	var resource KvBucket
	err := ctx.ReadResource("jetstream:index/kvBucket:KvBucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KvBucket resources.
type kvBucketState struct {
	// Contains additional information about this bucket
	Description *string `pulumi:"description"`
	// How many historical values to keep
	History *int `pulumi:"history"`
	// Maximum size of the entire bucket
	MaxBucketSize *int `pulumi:"maxBucketSize"`
	// Maximum size of any value
	MaxValueSize *int `pulumi:"maxValueSize"`
	// The name of the Bucket
	Name *string `pulumi:"name"`
	// Place the bucket in a specific cluster, influenced by placement_tags
	PlacementCluster *string `pulumi:"placementCluster"`
	// Place the stream only on servers with these tags
	PlacementTags []string `pulumi:"placementTags"`
	// Number of cluster replicas to store
	Replicas *int `pulumi:"replicas"`
	// How many seconds a value will be kept in the bucket
	Ttl *int `pulumi:"ttl"`
}

type KvBucketState struct {
	// Contains additional information about this bucket
	Description pulumi.StringPtrInput
	// How many historical values to keep
	History pulumi.IntPtrInput
	// Maximum size of the entire bucket
	MaxBucketSize pulumi.IntPtrInput
	// Maximum size of any value
	MaxValueSize pulumi.IntPtrInput
	// The name of the Bucket
	Name pulumi.StringPtrInput
	// Place the bucket in a specific cluster, influenced by placement_tags
	PlacementCluster pulumi.StringPtrInput
	// Place the stream only on servers with these tags
	PlacementTags pulumi.StringArrayInput
	// Number of cluster replicas to store
	Replicas pulumi.IntPtrInput
	// How many seconds a value will be kept in the bucket
	Ttl pulumi.IntPtrInput
}

func (KvBucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*kvBucketState)(nil)).Elem()
}

type kvBucketArgs struct {
	// Contains additional information about this bucket
	Description *string `pulumi:"description"`
	// How many historical values to keep
	History *int `pulumi:"history"`
	// Maximum size of the entire bucket
	MaxBucketSize *int `pulumi:"maxBucketSize"`
	// Maximum size of any value
	MaxValueSize *int `pulumi:"maxValueSize"`
	// The name of the Bucket
	Name *string `pulumi:"name"`
	// Place the bucket in a specific cluster, influenced by placement_tags
	PlacementCluster *string `pulumi:"placementCluster"`
	// Place the stream only on servers with these tags
	PlacementTags []string `pulumi:"placementTags"`
	// Number of cluster replicas to store
	Replicas *int `pulumi:"replicas"`
	// How many seconds a value will be kept in the bucket
	Ttl *int `pulumi:"ttl"`
}

// The set of arguments for constructing a KvBucket resource.
type KvBucketArgs struct {
	// Contains additional information about this bucket
	Description pulumi.StringPtrInput
	// How many historical values to keep
	History pulumi.IntPtrInput
	// Maximum size of the entire bucket
	MaxBucketSize pulumi.IntPtrInput
	// Maximum size of any value
	MaxValueSize pulumi.IntPtrInput
	// The name of the Bucket
	Name pulumi.StringPtrInput
	// Place the bucket in a specific cluster, influenced by placement_tags
	PlacementCluster pulumi.StringPtrInput
	// Place the stream only on servers with these tags
	PlacementTags pulumi.StringArrayInput
	// Number of cluster replicas to store
	Replicas pulumi.IntPtrInput
	// How many seconds a value will be kept in the bucket
	Ttl pulumi.IntPtrInput
}

func (KvBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*kvBucketArgs)(nil)).Elem()
}

type KvBucketInput interface {
	pulumi.Input

	ToKvBucketOutput() KvBucketOutput
	ToKvBucketOutputWithContext(ctx context.Context) KvBucketOutput
}

func (*KvBucket) ElementType() reflect.Type {
	return reflect.TypeOf((**KvBucket)(nil)).Elem()
}

func (i *KvBucket) ToKvBucketOutput() KvBucketOutput {
	return i.ToKvBucketOutputWithContext(context.Background())
}

func (i *KvBucket) ToKvBucketOutputWithContext(ctx context.Context) KvBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KvBucketOutput)
}

// KvBucketArrayInput is an input type that accepts KvBucketArray and KvBucketArrayOutput values.
// You can construct a concrete instance of `KvBucketArrayInput` via:
//
//	KvBucketArray{ KvBucketArgs{...} }
type KvBucketArrayInput interface {
	pulumi.Input

	ToKvBucketArrayOutput() KvBucketArrayOutput
	ToKvBucketArrayOutputWithContext(context.Context) KvBucketArrayOutput
}

type KvBucketArray []KvBucketInput

func (KvBucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KvBucket)(nil)).Elem()
}

func (i KvBucketArray) ToKvBucketArrayOutput() KvBucketArrayOutput {
	return i.ToKvBucketArrayOutputWithContext(context.Background())
}

func (i KvBucketArray) ToKvBucketArrayOutputWithContext(ctx context.Context) KvBucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KvBucketArrayOutput)
}

// KvBucketMapInput is an input type that accepts KvBucketMap and KvBucketMapOutput values.
// You can construct a concrete instance of `KvBucketMapInput` via:
//
//	KvBucketMap{ "key": KvBucketArgs{...} }
type KvBucketMapInput interface {
	pulumi.Input

	ToKvBucketMapOutput() KvBucketMapOutput
	ToKvBucketMapOutputWithContext(context.Context) KvBucketMapOutput
}

type KvBucketMap map[string]KvBucketInput

func (KvBucketMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KvBucket)(nil)).Elem()
}

func (i KvBucketMap) ToKvBucketMapOutput() KvBucketMapOutput {
	return i.ToKvBucketMapOutputWithContext(context.Background())
}

func (i KvBucketMap) ToKvBucketMapOutputWithContext(ctx context.Context) KvBucketMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KvBucketMapOutput)
}

type KvBucketOutput struct{ *pulumi.OutputState }

func (KvBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KvBucket)(nil)).Elem()
}

func (o KvBucketOutput) ToKvBucketOutput() KvBucketOutput {
	return o
}

func (o KvBucketOutput) ToKvBucketOutputWithContext(ctx context.Context) KvBucketOutput {
	return o
}

// Contains additional information about this bucket
func (o KvBucketOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KvBucket) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// How many historical values to keep
func (o KvBucketOutput) History() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KvBucket) pulumi.IntPtrOutput { return v.History }).(pulumi.IntPtrOutput)
}

// Maximum size of the entire bucket
func (o KvBucketOutput) MaxBucketSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KvBucket) pulumi.IntPtrOutput { return v.MaxBucketSize }).(pulumi.IntPtrOutput)
}

// Maximum size of any value
func (o KvBucketOutput) MaxValueSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KvBucket) pulumi.IntPtrOutput { return v.MaxValueSize }).(pulumi.IntPtrOutput)
}

// The name of the Bucket
func (o KvBucketOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KvBucket) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Place the bucket in a specific cluster, influenced by placement_tags
func (o KvBucketOutput) PlacementCluster() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KvBucket) pulumi.StringPtrOutput { return v.PlacementCluster }).(pulumi.StringPtrOutput)
}

// Place the stream only on servers with these tags
func (o KvBucketOutput) PlacementTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KvBucket) pulumi.StringArrayOutput { return v.PlacementTags }).(pulumi.StringArrayOutput)
}

// Number of cluster replicas to store
func (o KvBucketOutput) Replicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KvBucket) pulumi.IntPtrOutput { return v.Replicas }).(pulumi.IntPtrOutput)
}

// How many seconds a value will be kept in the bucket
func (o KvBucketOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KvBucket) pulumi.IntPtrOutput { return v.Ttl }).(pulumi.IntPtrOutput)
}

type KvBucketArrayOutput struct{ *pulumi.OutputState }

func (KvBucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KvBucket)(nil)).Elem()
}

func (o KvBucketArrayOutput) ToKvBucketArrayOutput() KvBucketArrayOutput {
	return o
}

func (o KvBucketArrayOutput) ToKvBucketArrayOutputWithContext(ctx context.Context) KvBucketArrayOutput {
	return o
}

func (o KvBucketArrayOutput) Index(i pulumi.IntInput) KvBucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KvBucket {
		return vs[0].([]*KvBucket)[vs[1].(int)]
	}).(KvBucketOutput)
}

type KvBucketMapOutput struct{ *pulumi.OutputState }

func (KvBucketMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KvBucket)(nil)).Elem()
}

func (o KvBucketMapOutput) ToKvBucketMapOutput() KvBucketMapOutput {
	return o
}

func (o KvBucketMapOutput) ToKvBucketMapOutputWithContext(ctx context.Context) KvBucketMapOutput {
	return o
}

func (o KvBucketMapOutput) MapIndex(k pulumi.StringInput) KvBucketOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KvBucket {
		return vs[0].(map[string]*KvBucket)[vs[1].(string)]
	}).(KvBucketOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KvBucketInput)(nil)).Elem(), &KvBucket{})
	pulumi.RegisterInputType(reflect.TypeOf((*KvBucketArrayInput)(nil)).Elem(), KvBucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KvBucketMapInput)(nil)).Elem(), KvBucketMap{})
	pulumi.RegisterOutputType(KvBucketOutput{})
	pulumi.RegisterOutputType(KvBucketArrayOutput{})
	pulumi.RegisterOutputType(KvBucketMapOutput{})
}

// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumi.Jetstream
{
    public static class Config
    {
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly global::Pulumi.Config __config = new global::Pulumi.Config("jetstream");

        private static readonly __Value<string?> _credentialData = new __Value<string?>(() => __config.Get("credentialData"));
        /// <summary>
        /// The contents of the NATS 2.0 Credentials file to use
        /// </summary>
        public static string? CredentialData
        {
            get => _credentialData.Get();
            set => _credentialData.Set(value);
        }

        private static readonly __Value<string?> _credentials = new __Value<string?>(() => __config.Get("credentials"));
        /// <summary>
        /// Path to the NATS 2.0 credentials file to use for authentication
        /// </summary>
        public static string? Credentials
        {
            get => _credentials.Get();
            set => _credentials.Set(value);
        }

        private static readonly __Value<string?> _nkey = new __Value<string?>(() => __config.Get("nkey"));
        /// <summary>
        /// Connect using a NKEY seed stored in a file
        /// </summary>
        public static string? Nkey
        {
            get => _nkey.Get();
            set => _nkey.Set(value);
        }

        private static readonly __Value<string?> _password = new __Value<string?>(() => __config.Get("password"));
        /// <summary>
        /// Connect using a password
        /// </summary>
        public static string? Password
        {
            get => _password.Get();
            set => _password.Set(value);
        }

        private static readonly __Value<string?> _servers = new __Value<string?>(() => __config.Get("servers"));
        /// <summary>
        /// Comma separated list of NATS servers to connect to
        /// </summary>
        public static string? Servers
        {
            get => _servers.Get();
            set => _servers.Set(value);
        }

        private static readonly __Value<Pulumi.Jetstream.Config.Types.Tls?> _tls = new __Value<Pulumi.Jetstream.Config.Types.Tls?>(() => __config.GetObject<Pulumi.Jetstream.Config.Types.Tls>("tls"));
        public static Pulumi.Jetstream.Config.Types.Tls? Tls
        {
            get => _tls.Get();
            set => _tls.Set(value);
        }

        private static readonly __Value<string?> _user = new __Value<string?>(() => __config.Get("user"));
        /// <summary>
        /// Connect using an username, used as token when no password is given
        /// </summary>
        public static string? User
        {
            get => _user.Get();
            set => _user.Set(value);
        }

        public static class Types
        {

             public class Tls
             {
            /// <summary>
            /// Path to the server root CA file (in PEM format). Needed when the NATS server has TLS enabled with an unknown root CA
            /// </summary>
                public string? CaFile { get; set; } = null!;
            /// <summary>
            /// The root CA (file) content, in PEM format. Needed when the NATS server has TLS enabled with an unknown root CA
            /// </summary>
                public string? CaFileData { get; set; } = null!;
            /// <summary>
            /// Path to client cert file (in PEM format). Needed when NATS server is configured to verify client certificate
            /// </summary>
                public string? CertFile { get; set; } = null!;
            /// <summary>
            /// The cert file content (in PEM format). Needed when NATS server is configured to verify client certificate
            /// </summary>
                public string? CertFileData { get; set; } = null!;
            /// <summary>
            /// Path to client key file (in PEM format). Needed when NATS server is configured to verify client certificate
            /// </summary>
                public string? KeyFile { get; set; } = null!;
            /// <summary>
            /// The key file content (in PEM format). Needed when NATS server is configured to verify client certificate
            /// </summary>
                public string? KeyFileData { get; set; } = null!;
            }
        }
    }
}

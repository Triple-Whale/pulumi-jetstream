# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'Tls',
]

@pulumi.output_type
class Tls(dict):
    def __init__(__self__, *,
                 ca_file: Optional[str] = None,
                 ca_file_data: Optional[str] = None,
                 cert_file: Optional[str] = None,
                 cert_file_data: Optional[str] = None,
                 key_file: Optional[str] = None,
                 key_file_data: Optional[str] = None):
        """
        :param str ca_file: Path to the server root CA file (in PEM format). Needed when the NATS server has TLS enabled with an unknown root CA
        :param str ca_file_data: The root CA (file) content, in PEM format. Needed when the NATS server has TLS enabled with an unknown root CA
        :param str cert_file: Path to client cert file (in PEM format). Needed when NATS server is configured to verify client certificate
        :param str cert_file_data: The cert file content (in PEM format). Needed when NATS server is configured to verify client certificate
        :param str key_file: Path to client key file (in PEM format). Needed when NATS server is configured to verify client certificate
        :param str key_file_data: The key file content (in PEM format). Needed when NATS server is configured to verify client certificate
        """
        if ca_file is not None:
            pulumi.set(__self__, "ca_file", ca_file)
        if ca_file_data is not None:
            pulumi.set(__self__, "ca_file_data", ca_file_data)
        if cert_file is not None:
            pulumi.set(__self__, "cert_file", cert_file)
        if cert_file_data is not None:
            pulumi.set(__self__, "cert_file_data", cert_file_data)
        if key_file is not None:
            pulumi.set(__self__, "key_file", key_file)
        if key_file_data is not None:
            pulumi.set(__self__, "key_file_data", key_file_data)

    @property
    @pulumi.getter(name="caFile")
    def ca_file(self) -> Optional[str]:
        """
        Path to the server root CA file (in PEM format). Needed when the NATS server has TLS enabled with an unknown root CA
        """
        return pulumi.get(self, "ca_file")

    @property
    @pulumi.getter(name="caFileData")
    def ca_file_data(self) -> Optional[str]:
        """
        The root CA (file) content, in PEM format. Needed when the NATS server has TLS enabled with an unknown root CA
        """
        return pulumi.get(self, "ca_file_data")

    @property
    @pulumi.getter(name="certFile")
    def cert_file(self) -> Optional[str]:
        """
        Path to client cert file (in PEM format). Needed when NATS server is configured to verify client certificate
        """
        return pulumi.get(self, "cert_file")

    @property
    @pulumi.getter(name="certFileData")
    def cert_file_data(self) -> Optional[str]:
        """
        The cert file content (in PEM format). Needed when NATS server is configured to verify client certificate
        """
        return pulumi.get(self, "cert_file_data")

    @property
    @pulumi.getter(name="keyFile")
    def key_file(self) -> Optional[str]:
        """
        Path to client key file (in PEM format). Needed when NATS server is configured to verify client certificate
        """
        return pulumi.get(self, "key_file")

    @property
    @pulumi.getter(name="keyFileData")
    def key_file_data(self) -> Optional[str]:
        """
        The key file content (in PEM format). Needed when NATS server is configured to verify client certificate
        """
        return pulumi.get(self, "key_file_data")


